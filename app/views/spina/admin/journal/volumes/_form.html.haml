%div{ data: { controller: 'tabs',
              tabs: { active: 'cursor-default text-gray-900 bg-spina-dark bg-opacity-10',
                      inactive: 'cursor-pointer bg-transparent text-gray-400 border-transparent' } } }
  = render Spina::UserInterface::HeaderComponent.new do |header|
    - header.actions do
      - if @volume.persisted?
        = render Spina::UserInterface::DropdownComponent.new do |dropdown|
          - dropdown.button(classes: "btn btn-default px-3") do
            = heroicon('dots-horizontal', style: :solid, class: "w-5 h-5 text-gray-600")

          - dropdown.menu do
            = button_to t('spina.permanently_delete'), admin_journal_volume_path(@volume), method: :delete, class: "block w-full text-left px-4 py-2 text-sm leading-5 font-medium text-red-500 cursor-pointer bg-white hover:bg-red-100 hover:bg-opacity-50 hover:text-red-500 focus:outline-none focus:bg-gray-100 focus:text-gray-900", form: {data: { controller: 'confirm', confirm_message: t('.delete_confirmation', name: @volume.number) } }

      = button_tag type: :submit, form: dom_id(@volume, :edit), class: 'btn btn-primary', data: { controller: 'button', action: 'button#loading', loading_message: t('spina.ui.saving')} do
        = heroicon('check', style: :solid, class: 'w-5 h-5 mr-1 -ml-2')
        = t '.save'

    - header.navigation do
      %nav.-mb-3.mt-4
        %ul.inline-flex.w-auto.rounded-md.bg-white
          - @tabs.each do |tab|
            %button.block.px-3.leading-relaxed.py-1.hover:text-gray-800.rounded-md.text-gray-400.font-medium.text-sm.flex.items-center.whitespace-nowrap{ type: 'button', data: { action: 'tabs#show', 'tabs-target': 'button', 'pane-id': "#{tab}" } }
              = t ".#{tab}"

  .p-4.md:p-8
    = form_for [:admin_journal, @volume], html: { autocomplete: 'off' } do |f|
      - @tabs.each_with_index do |tab, i|
        %div{ 'data-tabs-target': 'pane', id: tab, hidden: i != 0 }
          = render "form_#{tab}", f: f
